package com.zhoukewei.nlp.service;

import java.util.ArrayList;
import java.util.List;

import org.springframework.stereotype.Service;

import com.zhoukewei.nlp.eneity.Answer;
import com.zhoukewei.nlp.eneity.Case;
import com.zhoukewei.nlp.util.JDBCTools;

@Service
public class SearchServiceImpl implements SerchService{
	private String keyWord; //关键词
	private List<Case> cases;//病例
	private JDBCTools jdbc;
	
	public SearchServiceImpl(){
		jdbc=new JDBCTools();
	}
	public List<Case> searchCaseId(String keyWord){
	//	List<Long> caseId=new ArrayList<Long>();//结果的id
		
		//需要大改*******************************
		//查找
		String sql="select * from case_table join answer_table on case_table.answer_id=answer_table.answer_id";
		//访问数据库 是否存在
		List<List<String>> lists=jdbc.queryList(sql);//sql语句
	
		//排序
		
		//*******************************
		
		//给case赋值
		if(lists.size()==0)//判断 是否存在账户 列为0 表明没有 账户
			return null;
		List<String> list;
		
		for(int i=0;i<lists.size();){
			Case casetemp=new Case();
			Answer answertemp=new Answer();
			long idtemp;//获得case_id值 
			list=lists.get(i);	
			idtemp=Integer.valueOf(list.get(i)).intValue();//获得case_id值 
			
			//赋值case
			casetemp.setCase_id(idtemp);//赋值caseid
			casetemp.setQuestion_type(list.get(1));//赋值问题类型
			casetemp.setQuestion_time(list.get(2));//问题时间
			casetemp.setQuestion_title(list.get(3));//赋值问题标题
			casetemp.setQuestion_desc(list.get(4));//赋值问题描述
			casetemp.setQuestion_help(list.get(5));//赋值问题帮助
			casetemp.setAnswers((List<Answer>)null);
			cases.add(casetemp);
			
			//赋值answer
			int k=i;
			while(Integer.valueOf(list.get(i)).intValue()==idtemp && i <lists.size()){
				answertemp.setAnswer_id(Integer.valueOf(list.get(6)).intValue());//赋值answerid
				answertemp.setDoctor_id(Integer.valueOf(list.get(7)).intValue());//赋值医生id
				answertemp.setBool_adopt(Integer.valueOf(list.get(8)).intValue());
				answertemp.setAnswer_time(list.get(9));//赋值回答时间
				answertemp.setAnswer_analysis(list.get(10));//赋值回答分析
				answertemp.setAnswer_suggest(list.get(11));//赋值回答建议
				cases.get(k).setAnswers(answertemp);
				i++;
			}
			if(k==i)
				i++;
		}
		return cases;
	}
}
